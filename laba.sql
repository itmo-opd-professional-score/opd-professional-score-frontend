--TASK 1
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
-- Фильтры (AND):
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ < Перезачет.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД = 153285.
-- Вид соединения: RIGHT JOIN.

SELECT Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ТИПЫ_ВЕДОМОСТЕЙ
RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД = Н_ВЕДОМОСТИ.ТВ_ИД
WHERE Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ < 'Перезачет' AND Н_ВЕДОМОСТИ.ЧЛВК_ИД = 153285;


--TASK 2
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ИМЯ = Ярослав.
-- b) Н_ВЕДОМОСТИ.ДАТА > 1998-01-05.
-- c) Н_СЕССИЯ.УЧГОД = 2008/2009.
-- Вид соединения: LEFT JOIN.

SELECT Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.УЧГОД
FROM Н_ВЕДОМОСТИ
LEFT JOIN Н_ЛЮДИ ON  Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
LEFT JOIN Н_СЕССИЯ ON Н_ВЕДОМОСТИ.СЭС_ИД = Н_СЕССИЯ.СЭС_ИД
WHERE Н_ЛЮДИ.ИМЯ = 'Ярослав' AND Н_ВЕДОМОСТИ.ДАТА > '1998-01-05' AND Н_СЕССИЯ.УЧГОД = '2008/2009';


-- TASK 3
--Вывести число студентов группы 3102, которые младше 20 лет.
--Ответ должен содержать только одно число.

SELECT COUNT(*)
FROM Н_УЧЕНИКИ JOIN Н_ЛЮДИ ON
        Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
        Н_УЧЕНИКИ.ГРУППА = '3102'
AND Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ > CURRENT_TIMESTAMP - INTERVAL '20 years';


--TASK 4
-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается
-- (обучалось) ровно 2 групп на заочной форме обучения.
-- Для реализации использовать соединение таблиц.

SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД AS НОМЕР_ПЛАНА
FROM Н_ГРУППЫ_ПЛАНОВ
JOIN Н_ПЛАНЫ ON  Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очно-заочная(вечерняя)'
GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
HAVING COUNT(DISTINCT ГРУППА) = 2;


--TASK 5
-- Выведите таблицу со средним возрастом студентов во всех группах
-- (Группа, Средний возраст), где средний возраст меньше максимального возраста в группе 3100.

SELECT
   Н_ГРУППЫ_ПЛАНОВ.ГРУППА, ROUND(AVG(
        EXTRACT(YEAR FROM AGE(CURRENT_DATE, Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
   )) AS "Средний возраст"
FROM Н_ГРУППЫ_ПЛАНОВ
JOIN Н_УЧЕНИКИ ON Н_ГРУППЫ_ПЛАНОВ.ГРУППА = Н_УЧЕНИКИ.ГРУППА
JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
GROUP BY Н_ГРУППЫ_ПЛАНОВ.ГРУППА
HAVING ROUND(AVG(
	    EXTRACT(YEAR FROM AGE(CURRENT_DATE, Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
    )) >
    (
        SELECT ROUND(AVG(
            EXTRACT(YEAR FROM AGE(CURRENT_DATE, Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))
        ))
        FROM Н_ГРУППЫ_ПЛАНОВ
        JOIN Н_УЧЕНИКИ ON Н_ГРУППЫ_ПЛАНОВ.ГРУППА = Н_УЧЕНИКИ.ГРУППА
        JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    )
ORDER BY ГРУППА;


-- TASK 6
--Получить список студентов, зачисленных ровно первого сентября 2012 года на первый курс очной формы обучения. В результат включить:
--номер группы;
--номер, фамилию, имя и отчество студента;
--номер и состояние пункта приказа;

SELECT
    studs.ГРУППА AS "Номер Группы",
    people.ФАМИЛИЯ AS "Фамилия",
    people.ИМЯ AS "Имя",
    people.ОТЧЕСТВО AS "Отчество",
    studs.ПЛАН_ИД AS "№ Плана",
    studs.СОСТОЯНИЕ AS "Cостояние приказа"
FROM Н_УЧЕНИКИ studs
JOIN Н_ПЛАНЫ plans ON studs.ПЛАН_ИД = plans.ИД
JOIN Н_ЛЮДИ people ON studs.ЧЛВК_ИД = people.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ s_forms ON s_forms.ИД = plans.ФО_ИД
WHERE plans.КУРС = 1
AND studs.ПРИЗНАК = 'обучен'
AND s_forms.НАИМЕНОВАНИЕ = 'Очная'
AND studs.СОСТОЯНИЕ = 'утвержден'
AND plans.ДАТА_УТВЕРЖДЕНИЯ = '2009-10-01 00:00:00';


-- TASK 7
-- Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ
-- (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ).
-- В запросе нельзя использовать DISTINCT.

SELECT ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО
FROM Н_ЛЮДИ
WHERE ИД NOT IN (
    SELECT ЧЛВК_ИД
	FROM Н_УЧЕНИКИ
	GROUP BY ЧЛВК_ИД
)
ORDER BY ИД;


-- TASK 8
-- Вывести разницу между средним возрастом студентов отличников первого курса и
-- средним возрастом студентов отличников четвертого курса на 20хх

WITH ОТЛИЧНИКИ AS (
    SELECT
        DISTINCT(Н_ЛЮДИ.ИД), ДАТА_РОЖДЕНИЯ, УЧЕБНЫЙ_ГОД, КУРС,
        EXTRACT(YEAR FROM AGE(ДАТА_РОЖДЕНИЯ)) AS ВОЗРАСТ
    FROM Н_УЧЕНИКИ
    JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ПЛАН_ИД
    JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    WHERE
    	КУРС IN (2, 4) AND УЧЕБНЫЙ_ГОД LIKE  '1999/2000' AND Н_ЛЮДИ.ИД
    	IN (SELECT Н_ВЕДОМОСТИ.ЧЛВК_ИД FROM Н_СЕССИЯ
    		JOIN Н_ВЕДОМОСТИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_СЕССИЯ.ЧЛВК_ИД
    		WHERE ОЦЕНКА = '5'AND СЕМЕСТР IN (0, 1)
    		GROUP BY Н_ВЕДОМОСТИ.ЧЛВК_ИД HAVING COUNT(DISTINCT СЕМЕСТР) = 2
    	)
)

SELECT ROUND(
    MAX(CASE WHEN КУРС = 4 THEN СРЕДНИЙ_ВОЗРАСТ END) -
    MAX(CASE WHEN КУРС = 2 THEN СРЕДНИЙ_ВОЗРАСТ END), 2
) AS РАЗНИЦА
FROM (
    SELECT КУРС, AVG(ВОЗРАСТ) AS СРЕДНИЙ_ВОЗРАСТ
    FROM ОТЛИЧНИКИ
    GROUP BY КУРС
);